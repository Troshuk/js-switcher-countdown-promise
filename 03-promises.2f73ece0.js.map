{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,aAC7BC,UAAWF,SAASC,cAAc,gBAkCpC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAoBC,GAC3BhB,EAAKI,UAAUa,SAAWD,C,CA9C5BhB,EAAKC,KAAKiB,iBAAiB,UAAU,SAAAC,GACnCA,EAAEC,iBAEF,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBd,MAAOkB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAErB,KAAIF,EAAMG,OAAS,GAAKF,EAAKE,OAAS,GAAKD,EAAOC,OAAS,GAA3D,CAIAZ,GAAoB,GAIpB,IAFA,IAAMa,EAAc,GAEXC,EAAI,EAAGA,GAAKH,EAAOC,MAAOE,IAAK,CACtC,IAAMC,EAAYC,OAAOC,SAASR,EAAMG,OAASF,EAAKE,OAASE,EAAI,GAEnED,EAAYK,KACV5B,EAAcwB,EAAGC,GACdI,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBT,EAAAsC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE9DgC,OAAM,SAAAJ,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBT,EAAAsC,OAAOI,QAAQ,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,KAMlEI,QAAQ8B,WAAWb,GAAaM,MAAK,W,OAAMnB,GAAoB,E,GAtB7D,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  createBtn: document.querySelector('form button'),\n};\n\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target.elements;\n\n  if (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    return;\n  }\n\n  disableCreateButton(true);\n\n  const allPromises = [];\n\n  for (let i = 1; i <= amount.value; i++) {\n    const delayTime = Number.parseInt(delay.value) + step.value * (i - 1);\n\n    allPromises.push(\n      createPromise(i, delayTime)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n    );\n  }\n\n  // Enable create button if all the promises has completed\n  Promise.allSettled(allPromises).then(() => disableCreateButton(false));\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction disableCreateButton(isDisabled) {\n  refs.createBtn.disabled = isDisabled;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","createBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$disableCreateButton","isDisabled","disabled","addEventListener","e","preventDefault","_elements","target","elements","delay1","step","amount","value","allPromises","i","delayTime","Number","parseInt","push","then","param","Notify","success","concat","catch","failure","allSettled"],"version":3,"file":"03-promises.2f73ece0.js.map"}